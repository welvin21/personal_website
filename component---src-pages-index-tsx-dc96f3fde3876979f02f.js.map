{"version":3,"sources":["webpack:///./node_modules/@chakra-ui/core/dist/es/List/index.js","webpack:///./src/components/indexPage/Description.tsx","webpack:///./src/components/indexPage/HighlightProjects.tsx","webpack:///./src/components/indexPage/Awards.tsx","webpack:///./src/components/indexPage/AboutWebsite.tsx","webpack:///./src/pages/index.tsx"],"names":["List","_ref","ref","_ref$styleType","styleType","_ref$stylePos","stylePos","spacing","children","props","validChildren","as","listStyleType","listStylePosition","map","child","index","count","displayName","ListItem","_ref2","mb","diplayName","Description","colorMode","useColorMode","Flex","my","direction","Heading","Text","color","href","isExternal","HighlightProjects","projects","useStaticQuery","allMdx","edges","node","frontmatter","Box","mt","ml","project","key","Awards","hackathons","site","siteMetadata","author","hackathon","link","name","organiser","achievement","AboutWebsite","IndexPage","location","Provider","value","title"],"mappings":"2FAAA,wJAUIA,EAAO,sBAAW,SAAUC,EAAMC,GACpC,IAAIC,EAAiBF,EAAKG,UACtBA,OAA+B,IAAnBD,EAA4B,OAASA,EACjDE,EAAgBJ,EAAKK,SACrBA,OAA6B,IAAlBD,EAA2B,SAAWA,EACjDE,EAAUN,EAAKM,QACfC,EAAWP,EAAKO,SAChBC,EAAQ,IAA8BR,EAAM,CAAC,YAAa,WAAY,UAAW,aAEjFS,EAAgB,YAAcF,GAClC,OAAO,YAAI,IAAK,IAAS,CACvBN,IAAKA,EACLS,GAAI,KACJC,cAAeR,EACfS,kBAAmBP,GAClBG,GAAQC,EAAcI,KAAI,SAAUC,EAAOC,GAG5C,OAFaA,EAAQ,IAAM,WAASC,MAAMT,GAGjCO,EAGF,uBAAaA,EAAO,CACzBR,QAASA,WAIfP,EAAKkB,YAAc,OACZ,IAAIC,EAAW,sBAAW,SAAUC,EAAOlB,GAChD,IAAIK,EAAUa,EAAMb,QAChBE,EAAQ,IAA8BW,EAAO,CAAC,YAElD,OAAO,YAAI,IAAW,IAAS,CAC7BlB,IAAKA,EACLS,GAAI,KACJU,GAAId,GACHE,OAELU,EAASG,WAAa,Y,0IC3CTC,EAAwB,WAAM,IACjCC,EAAcC,cAAdD,UAER,OACE,kBAACE,EAAA,EAAD,CAAMC,GAAI,EAAGC,UAAU,UACrB,kBAACC,EAAA,EAAD,CAASR,GAAI,GAAb,YACA,kBAACS,EAAA,EAAD,CAAMC,MAAK,QAAUP,GAArB,+BAEE,kBAAC,IAAD,CAAYQ,KAAK,sBAAjB,OAFF,uEAIE,kBAAC,IAAD,CAAYA,KAAK,+BAAjB,oBAJF,QAQE,kBAAC,IAAD,CAAYA,KAAK,0BAAjB,cARF,+GAUE,kBAAC,IAAD,CAAYA,KAAK,YAAYC,YAAY,GAAzC,YAVF,kC,oCCJOC,EAA8B,WAAM,IA0BzCC,EAvBFC,yBAAe,cADjBC,OAAUC,MAwBuBxB,KACjC,qBAAGyB,KAAQC,eAGb,OACE,kBAACC,EAAA,EAAD,CAAKC,GAAI,EAAGrB,GAAI,GAAIsB,GAAI,GACrBR,EAASrB,KAAI,SAAC8B,EAAmB5B,GAApB,OACZ,kBAAC,IAAD,eAAS6B,IAAK7B,GAAW4B,S,YCjCpBE,EAAmB,WAAM,IAqBxBC,EAlBRX,yBAAe,cADjBY,KAAQC,aAmBRC,OAAUH,WAGZ,OACE,kBAACrB,EAAA,EAAD,CAAMC,GAAI,EAAGC,UAAU,UACrB,kBAACE,EAAA,EAAD,+NAGA,kBAACW,EAAA,EAAD,CAAKC,GAAI,EAAGrB,GAAI,GAAIsB,GAAI,GACrBI,EAAWjC,KAAI,SAACqC,EAAsBnC,GAAvB,OACd,kBAAChB,EAAA,EAAD,CAAU6C,IAAK7B,GACb,kBAAC,IAAD,CAAYgB,KAAMmB,EAAUC,KAAM5C,SAAU2C,EAAUE,OADxD,OAEUF,EAAUG,UAAa,IAC9BH,EAAUI,aAAe,+BAAKJ,EAAUI,YAAf,YCpCzBC,EAAyB,WACpC,OACE,kBAACf,EAAA,EAAD,KACE,kBAACX,EAAA,EAAD,0CACqC,IACnC,kBAAC,IAAD,CAAYE,KAAK,4BAA4BxB,SAAS,aAFxD,sBAGoB,IAClB,kBAAC,IAAD,CACEwB,KAAK,kCACLxB,SAAS,eANb,0BAQ0B,IACxB,kBAAC,IAAD,CACEwB,KAAK,+CACLxB,SAAS,WAXb,O,YCiBSiD,UAdkB,SAAC,GAAiB,IAAfC,EAAe,EAAfA,SAClC,OACE,kBAAC,IAAgBC,SAAjB,CAA0BC,MAAOF,GAC/B,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKG,MAAM,UACX,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD","file":"component---src-pages-index-tsx-dc96f3fde3876979f02f.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/objectWithoutPropertiesLoose\";\n/** @jsx jsx */\n\nimport { jsx } from \"@emotion/core\";\nimport { Children, cloneElement, forwardRef } from \"react\";\nimport Box from \"../Box\";\nimport Icon from \"../Icon\";\nimport PseudoBox from \"../PseudoBox\";\nimport { cleanChildren } from \"../utils\";\nvar List = forwardRef(function (_ref, ref) {\n  var _ref$styleType = _ref.styleType,\n      styleType = _ref$styleType === void 0 ? \"none\" : _ref$styleType,\n      _ref$stylePos = _ref.stylePos,\n      stylePos = _ref$stylePos === void 0 ? \"inside\" : _ref$stylePos,\n      spacing = _ref.spacing,\n      children = _ref.children,\n      props = _objectWithoutPropertiesLoose(_ref, [\"styleType\", \"stylePos\", \"spacing\", \"children\"]);\n\n  var validChildren = cleanChildren(children);\n  return jsx(Box, _extends({\n    ref: ref,\n    as: \"ul\",\n    listStyleType: styleType,\n    listStylePosition: stylePos\n  }, props), validChildren.map(function (child, index) {\n    var isLast = index + 1 === Children.count(children);\n\n    if (isLast) {\n      return child;\n    }\n\n    return cloneElement(child, {\n      spacing: spacing\n    });\n  }));\n});\nList.displayName = \"List\";\nexport var ListItem = forwardRef(function (_ref2, ref) {\n  var spacing = _ref2.spacing,\n      props = _objectWithoutPropertiesLoose(_ref2, [\"spacing\"]);\n\n  return jsx(PseudoBox, _extends({\n    ref: ref,\n    as: \"li\",\n    mb: spacing\n  }, props));\n});\nListItem.diplayName = \"ListItem\";\nexport var ListIcon = function ListIcon(_ref3) {\n  var icon = _ref3.icon,\n      props = _objectWithoutPropertiesLoose(_ref3, [\"icon\"]);\n\n  if (typeof icon === \"string\") {\n    return jsx(Icon, _extends({\n      name: icon,\n      mr: 2\n    }, props));\n  }\n\n  return jsx(Box, _extends({\n    as: icon,\n    d: \"inline\",\n    focusable: \"false\",\n    size: \"1em\",\n    color: \"currentColor\",\n    mr: 2\n  }, props));\n};\nexport default List;","import React from 'react';\nimport { Flex, Text, Heading, useColorMode } from '@chakra-ui/core';\n\nimport { StyledLink } from '../common';\n\nexport const Description: React.FC = () => {\n  const { colorMode } = useColorMode();\n\n  return (\n    <Flex my={1} direction=\"column\">\n      <Heading mb={2}>About me</Heading>\n      <Text color={`text.${colorMode}`}>\n        {`I study computer science at `}\n        <StyledLink href=\"https://www.hku.hk\">HKU</StyledLink>\n        {` (class of 2022), and I've done Data Science and SWE internships at `}\n        <StyledLink href=\"https://societegenerale.com\">\n          Societe Generale\n        </StyledLink>\n        {` and `}\n        <StyledLink href=\"https://freehunter.io/\">Freehunter</StyledLink>\n        {` respectively before. I enjoy doing web development, machine learning, and algorithms. Here are some of the `}\n        <StyledLink href=\"/projects\" isExternal={false}>\n          projects\n        </StyledLink>\n        {` that I've worked on before:`}\n      </Text>\n    </Flex>\n  );\n};\n","import React from 'react';\nimport { Box } from '@chakra-ui/core';\nimport { graphql, useStaticQuery } from 'gatsby';\n\nimport { Project } from '../project';\nimport { IProject } from '../../types';\n\nexport const HighlightProjects: React.FC = () => {\n  const {\n    allMdx: { edges },\n  } = useStaticQuery(\n    graphql`\n      query {\n        allMdx(\n          filter: { fileAbsolutePath: { regex: \"/src/projects/\" } }\n          sort: { order: ASC, fields: [frontmatter___rank] }\n          limit: 3\n        ) {\n          edges {\n            node {\n              frontmatter {\n                path\n                title\n                excerpt\n                date(formatString: \"MMMM DD, YYYY\")\n              }\n            }\n          }\n        }\n      }\n    `\n  );\n\n  const projects: IProject[] = edges.map(\n    ({ node: { frontmatter: project } }: any) => project as IProject\n  );\n\n  return (\n    <Box mt={2} mb={10} ml={4}>\n      {projects.map((project: IProject, index) => (\n        <Project key={index} {...project} />\n      ))}\n    </Box>\n  );\n};\n","import React from 'react';\nimport { Flex, Text, Box, ListItem } from '@chakra-ui/core';\nimport { graphql, useStaticQuery } from 'gatsby';\n\nimport { Hackathon } from '../../types';\nimport { StyledLink } from '../common';\n\nexport const Awards: React.FC = () => {\n  const {\n    site: { siteMetadata },\n  } = useStaticQuery(graphql`\n    query {\n      site {\n        siteMetadata {\n          author {\n            hackathons {\n              name\n              organiser\n              achievement\n              link\n            }\n          }\n        }\n      }\n    }\n  `);\n\n  const {\n    author: { hackathons },\n  } = siteMetadata;\n\n  return (\n    <Flex my={1} direction=\"column\">\n      <Text>\n        {`Outside of school and/or work, I usually spend my free time reading books, jamming on the guitar, or shooting basketball. I like participating in hackathons as well, some of my most memorable hacks experiences are:`}\n      </Text>\n      <Box mt={2} mb={10} ml={4}>\n        {hackathons.map((hackathon: Hackathon, index: number) => (\n          <ListItem key={index}>\n            <StyledLink href={hackathon.link} children={hackathon.name} />\n            {` by ${hackathon.organiser}`}{' '}\n            {hackathon.achievement && <b>({hackathon.achievement})</b>}\n          </ListItem>\n        ))}\n      </Box>\n    </Flex>\n  );\n};\n","import React from 'react';\nimport { Box, Text } from '@chakra-ui/core';\n\nimport { StyledLink } from '../common';\n\nexport const AboutWebsite: React.FC = () => {\n  return (\n    <Box>\n      <Text>\n        This website was built by me using{' '}\n        <StyledLink href=\"https://www.gatsbyjs.com/\" children=\"GatsbyJS\" />,\n        written mainly on{' '}\n        <StyledLink\n          href=\"https://www.typescriptlang.org/\"\n          children=\"TypeScript\"\n        />\n        , and is open source on{' '}\n        <StyledLink\n          href=\"https://github.com/welvin21/personal_website\"\n          children=\"GitHub\"\n        />\n        .\n      </Text>\n    </Box>\n  );\n};\n","import React from 'react';\n\nimport { Layout, SEO } from '../components';\nimport {\n  Description,\n  HighlightProjects,\n  Awards,\n  AboutWebsite,\n} from '../components/indexPage';\nimport { LocationContext } from '../context';\n\nconst IndexPage: React.FC<any> = ({ location }) => {\n  return (\n    <LocationContext.Provider value={location}>\n      <Layout>\n        <SEO title=\"About\" />\n        <Description />\n        <HighlightProjects />\n        <Awards />\n        <AboutWebsite />\n      </Layout>\n    </LocationContext.Provider>\n  );\n};\n\nexport default IndexPage;\n"],"sourceRoot":""}