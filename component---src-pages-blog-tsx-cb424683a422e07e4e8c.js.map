{"version":3,"sources":["webpack:///./src/pages/blog.tsx"],"names":["blogPostsQuery","BlogPage","data","location","blogPosts","allMdx","edges","map","node","frontmatter","Provider","value","title","blogPost","index","key"],"mappings":"6FAAA,mHA2BaA,EAAiB,aAsBfC,UAzCiB,SAAC,GAAuB,IAArBC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,SACjCC,EAAyBF,EAAKG,OAAOC,MAAMC,KAC/C,qBAAGC,KAAQC,eAGb,OACE,kBAAC,IAAgBC,SAAjB,CAA0BC,MAAOR,GAC/B,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKS,MAAM,SACX,kBAAC,IAAD,KACGR,EAAUG,KAAI,SAACM,EAAqBC,GAAtB,OACb,kBAAC,IAAD,eAAUC,IAAKD,GAAWD","file":"component---src-pages-blog-tsx-cb424683a422e07e4e8c.js","sourcesContent":["import React from 'react';\nimport { Heading, Text, Box } from '@chakra-ui/core';\nimport { graphql } from 'gatsby';\n\nimport { Layout, SEO, BlogPost } from '../components';\nimport { LocationContext } from '../context';\nimport { IBlogPost } from '../types';\n\nconst BlogPage: React.FC<any> = ({ data, location }) => {\n  const blogPosts: IBlogPost[] = data.allMdx.edges.map(\n    ({ node: { frontmatter: blogPost } }: any) => blogPost as IBlogPost\n  );\n\n  return (\n    <LocationContext.Provider value={location}>\n      <Layout>\n        <SEO title=\"Blog\" />\n        <Box>\n          {blogPosts.map((blogPost: IBlogPost, index) => (\n            <BlogPost key={index} {...blogPost} />\n          ))}\n        </Box>\n      </Layout>\n    </LocationContext.Provider>\n  );\n};\n\nexport const blogPostsQuery = graphql`\n  query {\n    allMdx(\n      filter: { fileAbsolutePath: { regex: \"/src/blog-posts/\" } }\n      sort: { order: DESC, fields: [frontmatter___date] }\n      limit: 1000\n    ) {\n      edges {\n        node {\n          frontmatter {\n            path\n            title\n            excerpt\n            date(formatString: \"MMMM DD, YYYY\")\n            tags\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default BlogPage;\n"],"sourceRoot":""}